{"version":3,"sources":["logo.svg","components/Header.js","pages/Error404.js","pages/Cancion.js","components/Buscador.js","components/Letra.js","components/AlertDialog.js","components/ListaCanciones.js","components/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","Error404","url","useLocation","Alert","severity","style","maxWidth","margin","AlertTitle","pathname","textAlign","to","IconButton","color","useStyle","makeStyles","root","lyrics","whiteSpace","title","marginBottom","media","backgroundSize","height","goHome","justifyContent","Cancion","mySongs","classes","song","useParams","id","Card","CardActions","Button","size","component","Link","CardMedia","image","avatar","artist","CardContent","Typography","gutterBottom","variant","useStyles","theme","display","alignItems","spacing","with","Buscador","search","setSearch","setError","clasess","autoComplete","onSubmit","e","preventDefault","target","value","request","onReset","type","TextField","name","label","onChange","required","whileSpace","addBtn","Letra","currentSong","setCurrentSong","setMySongs","CardActionArea","onClick","AlertDialog","deleteSong","useState","open","setOpen","handleClose","edge","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","flexGrow","marginTop","demo","backgroundColor","palette","background","paper","alert","fontSize","ListaCanciones","songs","filter","el","index","localStorage","setItem","JSON","stringify","length","List","map","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","ListItemSecondaryAction","minHeight","transform","Loader","CircularProgress","App","mySongsInit","parse","getItem","error","useEffect","getData","a","artistApi","songApi","fetch","artistRes","songRes","json","artistJSON","songJSON","console","log","results","image_url","synopsis","basename","CssBaseline","exact","path","Object","keys","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","main","ReactDOM","render","document","getElementById"],"mappings":"2QAAe,MAA0B,iC,OCc1BA,EAVO,WACpB,OACE,yBAAQC,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,+CACA,qBAAKF,IAAKC,EAAMF,UAAU,WAAWG,IAAI,a,4CCsBlCC,EAxBE,WACf,IAAIC,EAAMC,cAEV,OACE,qCACA,eAACC,EAAA,EAAD,CACEC,SAAS,QACTC,MAAO,CAACC,SAAS,IAAKC,OAAO,eAF/B,UAGI,cAACC,EAAA,EAAD,wBACA,yCACU,4BAAG,4BAAIP,EAAIQ,aADrB,uBAIJ,qBAAKJ,MAAO,CAACE,OAAQ,YAAaG,UAAW,UAA7C,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAACC,EAAA,EAAD,CAAYC,MAAM,UAAlB,SACE,cAAC,IAAD,c,8DCTJC,EAAWC,YAAW,CAC1BC,KAAM,CACJV,SAAU,IACVC,OAAQ,aAEVU,OAAQ,CACNC,WAAY,uBAEdC,MAAO,CACLC,aAAc,mBAEhBC,MAAO,CACLC,eAAgB,QAChBC,OAAQ,QAEVC,OAAQ,CACNC,eAAgB,YAmDLC,EA/CC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEXC,EAAUd,IAKde,EAAOF,EADIG,cAAPC,IAKN,OACE,eAACC,EAAA,EAAD,CAAMpC,UAAWgC,EAAQZ,KAAzB,UACE,cAACiB,EAAA,EAAD,CAAarC,UAAWgC,EAAQJ,OAAhC,SACE,eAACU,EAAA,EAAD,CACEC,KAAK,QACLtB,MAAM,UACNuB,UAAWC,IACX1B,GAAG,IAJL,UAKE,cAAC,IAAD,IALF,YASF,cAAC2B,EAAA,EAAD,CACE1C,UAAWgC,EAAQP,MACnBkB,MAAOV,EAAKW,OACZrB,MAAOU,EAAKY,SACd,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRT,UAAU,KACVxC,UAAWgC,EAAQT,MAJrB,UAKKU,EAAKY,OALV,MAKqBZ,EAAKA,QAE1B,cAACc,EAAA,EAAD,CACEE,QAAQ,QACRhC,MAAM,gBACNuB,UAAU,IACVxC,UAAWgC,EAAQX,OAJrB,SAKKY,EAAKZ,gB,kCClEZ6B,EAAY/B,aAAW,SAAAgC,GAAK,MAAK,CACrC/B,KAAM,CACJgC,QAAS,OACTvB,eAAgB,SAChBwB,WAAY,SAEZ,QAAS,CACP1C,OAAQwC,EAAMG,QAAQ,GACtBC,KAAM,aAoFGC,EA7EE,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAE9BC,EAAUV,IA0BhB,OAIE,cAHA,CAGA,QACElD,UAAW4D,EAAQxC,KACnByC,aAAa,KACbC,SA/BiB,SAACC,GAIpBA,EAAEC,iBAGFN,EAAU,CACRb,OAAQkB,EAAEE,OAAOpB,OAAOqB,MACxBjC,KAAM8B,EAAEE,OAAOhC,KAAKiC,MACpBC,SAAS,KAsBTC,QAlBgB,SAAAL,GAElBL,EAAU,CACRb,OAAQ,GACRZ,KAAM,GACNkC,SAAS,IAGXR,GAAS,IAMT,UAKE,cAAC3C,EAAA,EAAD,CAAYC,MAAM,UAAUoD,KAAK,QAAjC,SACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CACEnC,GAAG,SACHoC,KAAK,SACLC,MAAM,UACNvB,QAAQ,WACRV,KAAK,SACL2B,MAAOT,EAAOZ,OACd4B,SAAU,SAAAV,GACRL,EAAU,2BACLD,GADI,IAEPZ,OAAQkB,EAAEE,OAAOC,MACjBC,SAAS,MAGbO,UAAQ,IACV,cAACJ,EAAA,EAAD,CACEnC,GAAG,OACHoC,KAAK,OACLC,MAAM,aACNvB,QAAQ,WACRV,KAAK,SACL2B,MAAOT,EAAOxB,KACdwC,SAAU,SAAAV,GACRL,EAAU,2BACLD,GADI,IAEPxB,KAAM8B,EAAEE,OAAOC,MACfC,SAAS,MAGbO,UAAQ,IACR,cAAC1D,EAAA,EAAD,CAAYC,MAAM,UAAUoD,KAAK,SAAjC,SACE,cAAC,IAAD,U,iBCnFJnB,EAAY/B,YAAW,CAC3BC,KAAM,CACJV,SAAU,IACVC,OAAQ,aAEVU,OAAQ,CAENsD,WAAY,wBAEdpD,MAAO,CACLC,aAAc,mBAEhBC,MAAO,CACLC,eAAgB,QAChBC,OAAQ,QAEViD,OAAQ,CACN/C,eAAgB,cA+DLgD,EA3DD,SAAC,GAMR,IALLC,EAKI,EALJA,YACAC,EAII,EAJJA,eAEAC,GAEI,EAHJjD,QAGI,EAFJiD,YACAtB,EACI,EADJA,UAGI1B,EAAUkB,IAiBd,OACE,eAACd,EAAA,EAAD,CAAMpC,UAAWgC,EAAQZ,KAAzB,UACE,eAAC6D,EAAA,EAAD,WACE,cAACvC,EAAA,EAAD,CACE1C,UAAWgC,EAAQP,MACnBkB,MAAOmC,EAAYlC,OACnBrB,MAAOuD,EAAYjC,SAErB,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRT,UAAU,KACVxC,UAAWgC,EAAQT,MAJrB,UAKGuD,EAAYjC,OALf,MAK0BiC,EAAY7C,QAEtC,cAACc,EAAA,EAAD,CACEE,QAAQ,QACRhC,MAAM,gBACNuB,UAAU,IACVxC,UAAWgC,EAAQX,OAJrB,SAKGyD,EAAYzD,eAInB,cAACgB,EAAA,EAAD,CAAarC,UAAWgC,EAAQ4C,OAAhC,SACE,cAACtC,EAAA,EAAD,CAAQC,KAAK,QAAQtB,MAAM,UAAUiE,QAxCvB,SAAAnB,GAGlBiB,GAAW,SAAAjD,GAAO,4BAAQA,GAAR,CAAiB+C,OAEnCpB,EAAU,CACRb,OAAQ,GACRZ,KAAM,GACNkC,SAAS,IAGXY,EAAe,KA6BX,yB,kLCtBOI,GA/CK,SAAC,GAAwB,IAAtBhD,EAAqB,EAArBA,GAAIiD,EAAiB,EAAjBA,WAEzB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMMC,EAAc,WAClBD,GAAQ,IAGX,OAAO,qCACJ,cAACvE,EAAA,EAAD,CAAYyE,KAAK,MAAMP,QATN,WACjBK,GAAQ,IAQR,SACE,cAAC,KAAD,MAEF,eAACG,EAAA,EAAD,CACEJ,KAAMA,EACNK,QAASH,EACT,kBAAgB,qBAChB,mBAAiB,2BAJnB,UAKI,cAACI,EAAA,EAAD,CAAazD,GAAG,qBAAhB,sCACA,cAAC0D,EAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAmB3D,GAAG,2BAAtB,8DACgD,4BAAIA,IADpD,SAIF,eAAC4D,GAAA,EAAD,WACE,eAACzD,EAAA,EAAD,CACA4C,QAAS,WACPE,EAAWjD,GACXqD,KAEFvE,MAAM,UALN,UAME,cAAC,KAAD,IANF,mBAQA,eAACqB,EAAA,EAAD,CACE4C,QAASM,EACTvE,MAAM,UACN+E,WAAS,EAHX,UAII,cAAC,KAAD,IAJJ,2BCnCJ9C,GAAY/B,aAAW,SAAAgC,GAAK,MAAK,CACrC/B,KAAM,CACJ6E,SAAU,EACVvF,SAAU,IACVC,OAAQ,OACRuF,UAAW,QAEbC,KAAM,CACJC,gBAAiBjD,EAAMkD,QAAQC,WAAWC,OAE5ChF,MAAO,CACLZ,OAAQwC,EAAMG,QAAQ,EAAG,EAAG,IAE9BkD,MAAO,CACLC,SAAU,SACV5E,eAAgB,SAChBwB,WAAY,cAsDDqD,GAjDQ,SAAC,GAA6B,IAA3B3E,EAA0B,EAA1BA,QAASiD,EAAiB,EAAjBA,WAE3BhD,EAAUkB,KAEVkC,EAAa,SAAAjD,GAIjB,IAAIwE,EAAQ5E,EAAQ6E,QAAO,SAACC,EAAIC,GAAL,OAAeA,IAAU3E,KAEpD6C,EAAW2B,GACXI,aAAaC,QAAQ,UAAWC,KAAKC,UAAUP,KAGjD,OACE,qBAAK3G,UAAWgC,EAAQZ,KAAxB,SACE,qBAAKpB,UAAWgC,EAAQmE,KAAxB,SACsB,IAAnBpE,EAAQoF,OACJ,cAAC5G,EAAA,EAAD,CAAOP,UAAWgC,EAAQwE,MAAOhG,SAAS,QAA1C,0CAGA,cAAC4G,EAAA,EAAD,UAGGrF,EAAQsF,KAAI,SAACR,EAAIC,GAAL,OACV,eAACQ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQrH,IAAK0G,EAAGhE,OAAQ5C,IAAK4G,EAAGjE,WAElC,cAAC6E,EAAA,EAAD,CAAcC,QAASb,EAAG5E,KAAM0F,UAAWd,EAAGhE,SAC9C,eAAC+E,EAAA,EAAD,WAEE,cAAC5G,EAAA,EAAD,CACEyE,KAAK,MACLjD,UAAWC,IACX1B,GAAE,mBAAc+F,GAHlB,SAII,cAAC,IAAD,MAEF,cAAC,GAAD,CAAa3E,GAAI2E,EAAO1B,WAAYA,SAb3B0B,a,UCxD3B5D,GAAY/B,aAAW,SAAAgC,GAAK,MAAK,CACrC/B,KAAM,CACJgC,QAAS,OACTvB,eAAgB,SAChBwB,WAAY,SACZwE,UAAW,OACXC,UAAW,gBAgBAC,OAXf,WAEE,IAAM/F,EAAUkB,KAEhB,OACE,qBAAKlD,UAAWgC,EAAQZ,KAAxB,SACE,cAAC4G,GAAA,EAAD,OCiISC,OArIf,WAEE,IAAIC,EAAcjB,KAAKkB,MAAMpB,aAAaqB,QAAQ,aAAe,GAOjE,EAA8B/C,mBAAS6C,GAAvC,mBAAOnG,EAAP,KAAgBiD,EAAhB,KAEA,EAA4BK,mBARX,CACfxC,OAAQ,GACRZ,KAAM,GACNkC,SAAS,IAKX,mBAAOV,EAAP,KAAeC,EAAf,KAEA,EAAsC2B,mBAAS,IAA/C,mBAAOP,EAAP,KAAoBC,EAApB,KAEA,EAA0BM,oBAAS,GAAnC,mBAAOgD,EAAP,KAAc1E,EAAd,KAmDA,OAhDA2E,qBAAU,WAERvB,aAAaC,QAAQ,UAAWC,KAAKC,UAAUnF,IAG/C,IAAMwG,EAAO,uCAAG,0CAAAC,EAAA,6DACN3F,EAAiBY,EAAjBZ,OAAQZ,EAASwB,EAATxB,KADF,SAIRwG,EAJQ,gEAI6DxG,GAEvEyG,EANU,0CAMmC7F,EANnC,cAM+CZ,EAN/C,qBAOQ0G,MAAMF,GAPd,cAOVG,EAPU,gBAQMD,MAAMD,GARZ,cAQVG,EARU,iBASSD,EAAUE,OATnB,eASVC,EATU,iBAUOF,EAAQC,OAVf,QAUVE,EAVU,OAYZC,QAAQC,IAAI,oBAAqBH,GACjCE,QAAQC,IAAI,oBAAqBF,GAEjCjE,EAAe,CACblC,OAAQmG,EAASG,QAAQ,GAAG5H,MAC5BqB,OAAQoG,EAASG,QAAQ,GAAGC,UAC5BnH,OACAZ,OAAQ2H,EAASG,QAAQ,GAAGE,WAnBlB,kDAuBZJ,QAAQC,IAAR,MAEAxF,EAAU,CACRb,SACAZ,OACAkC,SAAS,IAGXR,GAAS,GA/BG,0DAAH,qDAoCRF,EAAOU,SAGVoE,MAED,CAAC9E,IAGF,cAAC,IAAD,UAEE,cAAC,IAAD,CAAY6F,SAAS,IAArB,SACE,cAACC,EAAA,EAAD,UACE,sBAAKvJ,UAAU,MAAf,UAEE,cAAC,EAAD,IACA,sBAAMA,UAAU,WAAhB,SAEE,eAAC,IAAD,WAEE,eAAC,IAAD,CAAOwJ,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,EAAD,CACEhG,OAAQA,EACRC,UAAWA,EACXC,SAAUA,IAGVF,EAAOU,QAiB+B,IAApCuF,OAAOC,KAAK7E,GAAaqC,OACtB,cAAC,GAAD,IAEE,cAAC,EAAD,CAECrC,YAAaA,EAEbC,eAAgBA,EAEhBhD,QAASA,EACTiD,WAAYA,EAEZtB,UAAWA,IA5BhB2E,EAEG,eAAC9H,EAAA,EAAD,CACEC,SAAS,QACTC,MAAO,CAACC,SAAU,IAAKC,OAAQ,iBAFjC,UAGE,cAACC,EAAA,EAAD,oBAHF,gCAKE,+BACE,8CAAgB,4BAAI6C,EAAOZ,SAA3B,SACA,6CAAe,4BAAIY,EAAOxB,gBAI7B,cAAC,GAAD,CAAgBF,QAASA,EAASiD,WAAYA,OAqBzD,cAAC,IAAD,CACEyE,KAAK,eACLG,SAAU,cAAC,EAAD,CAAS7H,QAASA,MAC9B,cAAC,IAAD,CAAO0H,KAAK,IAAIjH,UAAWpC,mBCjI5ByJ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAR3G,GAAQmH,YAAe,CAC3BjE,QAAS,CACPqB,QAAS,CACP6C,KAAM,cAKZC,IAASC,OACP,cAAC,aAAD,UAEE,cAAC,IAAD,CAAkBtH,MAAOA,GAAzB,SACE,cAAC,GAAD,QAGJuH,SAASC,eAAe,SAM1Bd,O","file":"static/js/main.f5e82a02.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport logo from '../logo.svg'\n\n\nexport const Header = () => {\n  return (\n    <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>Mis Canciones</h1>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport { Link, useLocation } from 'react-router-dom'\nimport HomeIcon from '@material-ui/icons/Home'\nimport IconButton from '@material-ui/core/IconButton'\n\n\nconst Error404 = () => {\n  let url = useLocation()\n\n  return (\n    <>\n    <Alert\n      severity=\"error\"\n      style={{maxWidth:753, margin:\"2rem auto 0\"}}>\n        <AlertTitle>Error 404</AlertTitle>\n        <p>\n          Recurso <b><i>{url.pathname}</i></b> no encontrado\n        </p>\n    </Alert>\n    <div style={{margin: \"1rem auto\", textAlign: \"center\"}}>\n      <Link to=\"/\">\n        <IconButton color=\"primary\" >\n          <HomeIcon />\n        </IconButton>\n      </Link>\n    </div>\n    </>\n  )\n}\n\nexport default Error404\n","import React from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport {\n  makeStyles,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography\n} from '@material-ui/core'\nimport Homelcon from '@material-ui/icons/Home'\n\n//Estilos\nconst useStyle = makeStyles({\n  root: {\n    maxWidth: 800,\n    margin: \"2rem auto\"\n  },\n  lyrics: {\n    whiteSpace: \"pre-wrap !important\"\n  },\n  title: {\n    marginBottom: \"3rem !important\"\n  },\n  media: {\n    backgroundSize: \"cover\",\n    height: \"50vh\"\n  },\n  goHome: {\n    justifyContent: \"center\"\n  }\n})\n\nconst Cancion = ({ mySongs }) => {\n  // Estilos\n  const classes = useStyle()\n  // console.log(mySongs)\n\n  // Saco el id\n  let { id } = useParams(),\n    song = mySongs[id]\n  // console.log(useParams)\n  // Solo mostrar la del id que me interesa\n\n  return (\n    <Card className={classes.root}>\n      <CardActions className={classes.goHome}>\n        <Button\n          size=\"large\"\n          color=\"primary\"\n          component={Link}\n          to=\"/\">\n          <Homelcon />\n          Home\n        </Button>\n      </CardActions>\n      <CardMedia\n        className={classes.media}\n        image={song.avatar}\n        title={song.artist}/>\n      <CardContent>\n        <Typography\n          gutterBottom\n          variant=\"h4\"\n          component=\"h2\"\n          className={classes.title}>\n            {song.artist} - {song.song}\n          </Typography>\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n          component=\"p\"\n          className={classes.lyrics}>\n            {song.lyrics}\n          </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default Cancion\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Homelcon from '@material-ui/icons/Home'\n\n// Construccion de los estilos\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n    \"& > *\": {\n      margin: theme.spacing(0),\n      with: \"auto\"\n    }\n  }\n}))\n\n// mediante destrucuturacion recibimos las props, setSearch es la funcion que actualiza la variable anterior\n// asi es como le podemos pasar parametros de hijo a padre\nconst Buscador = ({search, setSearch, setError}) => {\n  // VAriable que guardara el Hook personalixzado de stilos\n  const clasess = useStyles()\n\n  const handleSubmit = (e) => {\n    // alert(\"enviando\")\n    // console.log(\"evento\", e)\n    // Evitamos la accion por defecto de enviar el formulario\n    e.preventDefault()\n    // Si el formulario se procesa le enviaremos los datos\n    // ejecuta la funcion setSearch y esta recibe un objeto\n    setSearch({\n      artist: e.target.artist.value,\n      song: e.target.song.value,\n      request: true\n    })\n  }\n\n  const handleReset = e => {\n    // alert(\"reseteando\")\n    setSearch({\n      artist: '',\n      song: '',\n      request: false\n    })\n\n    setError(false)\n  }\n  return (\n    // quitar el novalidate para que no me envie el formulario vacio y el autocomplete a on\n    // Es de tipo reset que me ayuda a resetear el formulario y me envia a la pagina del home\n    // formulario controlado\n    <form\n      className={clasess.root}\n      autoComplete=\"on\"\n      onSubmit={handleSubmit}\n      onReset={handleReset}>\n      <IconButton color=\"primary\" type=\"reset\">\n          <Homelcon />\n      </IconButton>\n      <TextField\n        id=\"artist\"\n        name=\"artist\"\n        label=\"Artista\"\n        variant=\"outlined\"\n        size=\"medium\"\n        value={search.artist}\n        onChange={e => {\n          setSearch({\n            ...search,\n            artist: e.target.value,\n            request: false\n          })\n        }}\n        required />\n      <TextField\n        id=\"song\"\n        name=\"song\"\n        label=\"Canción\"\n        variant=\"outlined\"\n        size=\"medium\"\n        value={search.song}\n        onChange={e => {\n          setSearch({\n            ...search,\n            song: e.target.value,\n            request: false\n          })\n        }}\n        required />\n        <IconButton color=\"primary\" type=\"submit\">\n          <SearchIcon />\n        </IconButton>\n    </form>\n  )\n}\n\nexport default Buscador\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 800,\n    margin: \"2rem auto\"\n  },\n  lyrics: {\n    // Prewarp para que no se ponga todo en una linea y lea los saltos de linea\n    whileSpace: \"pre-wrap !imporntant\"\n  },\n  title: {\n    marginBottom: \"3rem !important\"\n  },\n  media: {\n    backgroundSize: \"cover\",\n    height: \"50vh\"\n  },\n  addBtn: {\n    justifyContent: \"flex-end\"\n  }\n})\n\nconst Letra = ({\n  currentSong,\n  setCurrentSong,\n  mySongs,\n  setMySongs,\n  setSearch\n}) => {\n  // para las clases\n  let classes = useStyles()\n\n  // Para guardar en el localstorage\n  const handleClick = e => {\n    // alert(\"Guardar cancion\")\n    // setMySongs va ser igual a lo que ya tiene mySongs en el estado + la cancion actual, Le pasa al padre la informacion\n    setMySongs(mySongs => [...mySongs, currentSong])\n    // Limpiamos el formulario de busqueda\n    setSearch({\n      artist: '',\n      song: '',\n      request: false\n    })\n    // Mantener la vista que busque\n    setCurrentSong({})\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={currentSong.avatar}\n          title={currentSong.artist}\n        />\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h4\"\n            component=\"h2\"\n            className={classes.title}>\n            {currentSong.artist} - {currentSong.song}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n            className={classes.lyrics}>\n            {currentSong.lyrics}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions className={classes.addBtn}>\n        <Button size=\"large\" color=\"primary\" onClick={handleClick}>\n          Share\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default Letra\n","import React, { useState } from 'react'\nimport {\n\tButton,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton\n} from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\nimport PanToolIcon from '@material-ui/icons/PanTool'\n\nconst AlertDialog = ({ id, deleteSong }) => {\n  // Hook, variable open para controlar la alerta, y su metodo de acyualizacion es setOpen\n  const [open, setOpen] = useState(false)\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n\treturn <>\n    <IconButton edge=\"end\" onClick={handleOpen}>\n      <DeleteIcon />\n    </IconButton>\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Alerta de Eliminación</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            ¿Estas a punto de borrar la cancion con el id <b>{id}</b>?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n          onClick={()=>{\n            deleteSong(id)\n            handleClose()\n          }}\n          color=\"primary\">\n            <DeleteForeverIcon /> Si, eliminar\n          </Button>\n          <Button\n            onClick={handleClose}\n            color=\"primary\"\n            autoFocus>\n              <PanToolIcon />No, detente\n          </Button>\n        </DialogActions>\n      </Dialog>\n  </>\n}\n\nexport default AlertDialog;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport Alert from '@material-ui/lab/Alert'\nimport AlertDialog from './AlertDialog'\n\n// Estilos\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752,\n    margin: \"auto\",\n    marginTop: \"2rem\"\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  },\n  title: {\n    margin: theme.spacing(4, 0, 2)\n  },\n  alert: {\n    fontSize: \"1.5rem\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}))\n\n\nconst ListaCanciones = ({ mySongs, setMySongs }) => {\n  // Estilos\n  const classes = useStyles()\n\n  const deleteSong = id => {\n    // alert(\"Eliminar cancion\")\n    // Metodo filter para excluir la cancion y luego actualizar el arreglo en el estado\n    // Si el index es igual al elemento lo va excluir si no pasa el elemento\n    let songs = mySongs.filter((el, index) => index !== id)\n    // Ya tengo un arreglo sin la cancion que quiero eliminar\n    setMySongs(songs)\n    localStorage.setItem(\"mySongs\", JSON.stringify(songs))\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.demo}>\n        {mySongs.length === 0\n          ? (<Alert className={classes.alert} severity=\"error\">\n              No tiene canciones Guardadas\n            </Alert>)\n          : (<List>\n              {\n                // la misma posicion del elemento como index\n                mySongs.map((el, index) => (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar alt={el.artist} src={el.avatar} />\n                    </ListItemAvatar>\n                    <ListItemText primary={el.song} secondary={el.artist}/>\n                    <ListItemSecondaryAction>\n                      {/* Para que el Boton funcione con react Router se debe agregar las propiedades component y to (Esta en la documentacion) */}\n                      <IconButton\n                        edge=\"end\"\n                        component={Link}\n                        to={`/cancion/${index}`}>\n                          <LaunchIcon />\n                        </IconButton>\n                        <AlertDialog id={index} deleteSong={deleteSong}/>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))\n              }\n            </List>)}\n      </div>\n    </div>\n  )\n}\n\nexport default ListaCanciones\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Estilos\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"50vh\",\n    transform: \"scale(4)\"\n  }\n}))\n\n\nfunction Loader() {\n  // Estilos\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  )\n}\n\nexport default Loader\n","import { useState, useEffect } from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Route, Switch, HashRouter } from 'react-router-dom'\n// CssBaseline se usa para tener los estilos base\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Header from './components/Header'\nimport Error404 from './pages/Error404'\nimport Cancion from './pages/Cancion'\nimport Buscador from './components/Buscador'\nimport Letra from './components/Letra'\nimport ListaCanciones from './components/ListaCanciones'\nimport Loader from './components/Loader'\nimport Alert from '@material-ui/lab/Alert'\nimport AlertTitle from '@material-ui/lab/AlertTitle'\n\n\n\n// Como el componente es una funcion usaremos Hooks para el manejo del estado\nfunction App() {\n  // Variable para inicializar el Storage, si hay algo en el local storage lo cargue si no cargue arrelglo vacio y el search\n  let mySongsInit = JSON.parse(localStorage.getItem(\"mySongs\")) || []\n  let searchInit = {\n    artist: '',\n    song: '',\n    request: false\n  }\n  // Variables de estado, un arreglo para guardar las canciones\n  const [mySongs, setMySongs] = useState(mySongsInit)\n  // Buscador, la variable request(peticion) me sirve para limpiar el buscador y si no encuentra la informacion de la busqueda\n  const [search, setSearch] = useState(searchInit)\n  // PAra el manejo de rutas, para saber que cancion estoy consultando o quiero eliminar\n  const [currentSong, setCurrentSong] = useState({})\n  // Variable de error, ayuda a controlar el loader\n  const [error, setError] = useState(false)\n\n  // Funcion de Efecto, La variable que detecta un cambio para que se ejecute esta funcion es search\n  useEffect(() => {\n    //Guarda los datos en localStorage, my Songs es el objeto enviado por el boton del componente Letra\n    localStorage.setItem(\"mySongs\", JSON.stringify(mySongs))\n\n    // Getdata sera queien tiene la logica, las peticiones a las apis\n    const getData = async () => {\n      const { artist, song } = search\n\n      try {\n        let artistApi = `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${song}`,\n        // La API dde lyrics.ovh de la letras canciones esta caida por lo que usare la del reto de comfama\n          songApi = `https://api.jikan.moe/v3/search/${artist}?q=${song}&limit=2`,\n          artistRes = await fetch(artistApi),\n          songRes = await fetch(songApi),\n          artistJSON = await artistRes.json(),\n          songJSON = await songRes.json()\n        // Guardaremos la respuesta en la variable currentSong\n        console.log('Respuesta artista', artistJSON)\n        console.log('Respuesta cancion', songJSON)\n\n        setCurrentSong({\n          artist: songJSON.results[0].title,\n          avatar: songJSON.results[0].image_url,\n          song,\n          lyrics: songJSON.results[0].synopsis\n        })\n\n      } catch (error) {\n        console.log(error)\n        // Como se llaman igual se puede colocar solo el value\n        setSearch({\n          artist,\n          song,\n          request: false\n        })\n\n        setError(true)\n      }\n    }\n\n    // Si ocurre un error retorne para que no se quede haciendo la peticion de lo contrario ejecute la funcion getData\n    if (!search.request) {\n      return;\n    } else {\n      getData()\n    }\n  }, [search])\n\n  return (\n    <Router>\n      {/* HASrouter para tener rutas amigables en servidor ftp */}\n      <HashRouter basename=\"/\">\n        <CssBaseline>\n          <div className=\"App\">\n            {/* Utilizamos el componente Header */}\n            <Header />\n            <main className=\"App-main\">\n              {/* Creamos enrutador */}\n              <Switch>\n                {/* Inicialmente renderizamos el home directamente */}\n                <Route exact path=\"/\">\n                  <Buscador\n                    search={search}\n                    setSearch={setSearch}\n                    setError={setError} />\n                  {/* Solo se visualiza si ya realizamos una busqueda para eso realizamos un condicional de renderizado*/}\n                  {/* si esta propiedad esta en falso */}\n                  {!search.request\n                    ? (error\n                        ? (\n                          <Alert\n                            severity=\"error\"\n                            style={{maxWidth: 752, margin: \"2rem, auto, 0\"}}>\n                            <AlertTitle>Error</AlertTitle>\n                            Hubo un problema al consultar\n                            <ul>\n                              <li>El Artista: <b>{search.artist}</b> o </li>\n                              <li>La cancion <b>{search.song}</b></li>\n                            </ul>\n                          </Alert>\n                        )\n                        : (<ListaCanciones mySongs={mySongs} setMySongs={setMySongs}/>)\n                      )\n                      // Si el objeto current Songs esta vacio (No tiene propiedades) para evitar que se cargue al DOM el componente vacio ya que recibe parametros de la peticion\n                    : Object.keys(currentSong).length === 0\n                      ? (<Loader />)\n                      : (\n                          (<Letra\n                            // La cancion actual para que despliegue la informacion\n                            currentSong={currentSong}\n                            // para limpiar la n actual\n                            setCurrentSong={setCurrentSong}\n                            // el arreglo para agregar a la lista o eliminar canciones\n                            mySongs={mySongs}\n                            setMySongs={setMySongs}\n                            // Para limpiar el buscador\n                            setSearch={setSearch} />\n                            )\n                        )\n                  }\n                </Route>\n                {/* El componente cancion lo renderizamos de esta manera ya que va recibir una prop */}\n                <Route\n                  path=\"/cancion/:id\"\n                  children={<Cancion mySongs={mySongs}/>} />\n                <Route path=\"*\" component={Error404} />\n              </Switch>\n            </main>\n          </div>\n        </CssBaseline>\n      </HashRouter>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles'\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Creacion de color primary para nuestra app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#61DAFB\"\n    }\n  }\n})\n\nReactDOM.render(\n  <StrictMode>\n    {/* Envolvemos la App dentro de  MuiThemeProvider para que envuelva los colores predeterminados*/}\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}